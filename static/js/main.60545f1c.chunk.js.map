{"version":3,"sources":["App.js","index.js"],"names":["magic","Magic","extensions","WebAuthnExtension","App","useState","username","setUsername","isLoggedIn","setIsLoggedIn","metadata","setMetadata","navigator","userAgentData","brands","some","b","brand","isChrome","useEffect","alert","user","then","magicIsLoggedIn","a","webauthn","getMetadata","register","registerNewUser","login","logout","PrettyPrintJson","data","JSON","stringify","className","onClick","name","required","placeholder","onChange","event","target","value","disabled","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"yPAKMA,EAAQ,IAAIC,IAAM,2BAA4B,CAClDC,WAAY,CAAC,IAAIC,OAGJ,SAASC,IAAO,IAAD,IAC5B,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAAS,MAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAmBN,mBAAQ,UAACO,UAAUC,qBAAX,iBAAC,EAAyBC,cAA1B,aAAC,EAAiCC,MAAK,SAAAC,GAAC,MAAgB,kBAAZA,EAAEC,UAAlEC,EAAP,oBAEAC,qBAAU,WACHD,GACHE,MAAM,+HAGRpB,EAAMqB,KAAKb,aAAac,KAAxB,uCAA6B,WAAOC,GAAP,eAAAC,EAAA,yDAC3Bf,EAAcc,IACVA,EAFuB,gCAGFvB,EAAMyB,SAASC,cAHb,OAGnBhB,EAHmB,OAIzBH,EAAYG,EAASJ,UACrBK,EAAYD,GALa,2CAA7B,yDAQC,CAACF,EAAYU,IAEhB,IAAMS,EAAQ,uCAAG,sBAAAH,EAAA,sEACTxB,EAAMyB,SAASG,gBAAgB,CAAEtB,aADxB,OAEfG,GAAc,GAFC,2CAAH,qDAKRoB,EAAK,uCAAG,sBAAAL,EAAA,sEACNxB,EAAMyB,SAASI,MAAM,CAACvB,aADhB,OAEZG,GAAc,GAFF,2CAAH,qDAKLqB,EAAM,uCAAG,sBAAAN,EAAA,sEACPxB,EAAMqB,KAAKS,SADJ,OAEbrB,GAAc,GAFD,2CAAH,qDAKNsB,EAAkB,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAF,OAAaA,EAAO,6BAAK,6BAAMC,KAAKC,UAAUF,EAAM,KAAM,KAAmB,+BAErG,OACE,yBAAKG,UAAU,OACb,yBAAKA,UAAU,SACb,0DACA,qFAEA3B,EAiBA,oCACA,6BACE,yBAAK2B,UAAU,aACb,4CAAkB7B,GAClB,4BAAQ8B,QAASN,GAAjB,aAGJ,6BACE,kBAACC,EAAD,CAAiBC,KAAMtB,MAxBzB,yBAAKyB,UAAU,aACb,uDACA,2BACEE,KAAK,WACLC,SAAS,WACTC,YAAY,sBACZC,SAAU,SAACC,GACTlC,EAAYkC,EAAMC,OAAOC,UAG7B,6BACI,4BAAQC,UAAW1B,EAAUkB,QAAST,GAAtC,WACA,4BAAQQ,UAAU,eAAeS,UAAW1B,EAAUkB,QAASP,GAA/D,aC7Dd,IAAMgB,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC9C,EAAD,OAEFyC,K","file":"static/js/main.60545f1c.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\nimport { Magic } from \"magic-sdk\";\nimport { WebAuthnExtension } from \"@magic-ext/webauthn\";\n\nconst magic = new Magic(\"pk_live_B151BB2AF18DF0BE\", {\n  extensions: [new WebAuthnExtension()]\n});\n\nexport default function App() {\n  const [username, setUsername] = useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [metadata, setMetadata] = useState(null);\n  const [isChrome] = useState(navigator.userAgentData?.brands?.some(b => b.brand === 'Google Chrome'))\n\n  useEffect(() => {\n    if (!isChrome) {\n      alert(\"This demo is only supported on Google Chrome on a laptop or desktop. Demos on other browsers and platforms are coming soon!\")\n    }\n\n    magic.user.isLoggedIn().then(async (magicIsLoggedIn) => {\n      setIsLoggedIn(magicIsLoggedIn);\n      if (magicIsLoggedIn) {\n        const metadata = await magic.webauthn.getMetadata();\n        setUsername(metadata.username);\n        setMetadata(metadata);\n      }\n    });\n  }, [isLoggedIn, isChrome]);\n\n  const register = async () => {\n    await magic.webauthn.registerNewUser({ username });\n    setIsLoggedIn(true);\n  };\n\n  const login = async () => {\n    await magic.webauthn.login({username});\n    setIsLoggedIn(true);\n  };\n\n  const logout = async () => {\n    await magic.user.logout();\n    setIsLoggedIn(false);\n  };\n\n  const PrettyPrintJson = ({data}) => (data ? <div><pre>{JSON.stringify(data, null, 2) }</pre></div> : <div/>);\n\n  return (\n    <div className=\"App\">\n      <div className=\"title\">\n        <h1>WebAuthn Login with Magic </h1>\n        <h4>Login with Yubikey or TouchID on your Chrome browser</h4>\n      </div>\n      {!isLoggedIn ? (\n        <div className=\"container\">\n          <p>Please sign up or log in</p>\n          <input\n            name=\"username\"\n            required=\"required\"\n            placeholder=\"Enter your username\"\n            onChange={(event) => {\n              setUsername(event.target.value);\n            }}\n          />\n          <div>\n              <button disabled={!isChrome} onClick={register}>Sign up</button>\n              <button className=\"login-button\" disabled={!isChrome} onClick={login}>Log in</button>\n          </div>\n        </div>\n      ) : (\n        <>\n        <div>\n          <div className=\"container\">\n            <p>Current user: {username}</p>\n            <button onClick={logout}>Log out</button>\n          </div>\n        </div>\n        <div>\n          <PrettyPrintJson data={metadata}/>\n        </div>\n        </>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}